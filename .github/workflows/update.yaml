name: Check & Update Preflight

on:
  schedule:
    - cron: "23 1 * * *"
  workflow_dispatch:
    inputs:
      dry-run:
        default: true
        description: "Perform a dry run"
        required: false

jobs:
  check-versions:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          registry-url: 'https://registry.npmjs.org'

      - name: Get latest Tailwind version
        run: |
          TAILWIND_VERSION=$(curl -s "https://api.github.com/repos/tailwindlabs/tailwindcss/releases/latest" | jq -r '.tag_name' | cut -c 2-)
          echo "TAILWIND_VERSION=$TAILWIND_VERSION" >> $GITHUB_ENV

      - name: Get latest Preflight version
        run: |
          PREFLIGHT_VERSION=$(node -p "require('./package.json').version")
          echo "PREFLIGHT_VERSION=$PREFLIGHT_VERSION" >> $GITHUB_ENV

      - name: Run update check if Tailwind version is greater than Preflight version
        run: |
          if [[ ${{ env.TAILWIND_VERSION }} > ${{ env.PREFLIGHT_VERSION }} ]]; then
            echo "update=true" >> $GITHUB_OUTPUT
          else
            echo "update=false" >> $GITHUB_OUTPUT
          fi
        id: check-update

      - name: Download preflight.css from Tailwind release
        if: ${{ steps.check-update.outputs.update }} == true
        run: |
          curl -sL -o preflight.css "https://cdn.jsdelivr.net/npm/tailwindcss@${{ env.TAILWIND_VERSION }}/src/css/preflight.css"
          echo "Successfully downloaded & replaced preflight.css"

      - name: Update package.json version
        if: ${{ steps.check-update.outputs.update }} == true
        run: |
          npm version --no-git-tag-version ${{ env.TAILWIND_VERSION }}
          echo "Successfully updated package.json version"

      - name: Commit & push changes
        if: ${{ inputs.dry-run }} == false && ${{ steps.check-update.outputs.update }} == true
        run: |
          git config user.name "GitHub Action"
          git config user.email "github-actions@github.com"
          echo "Successfully configured git"
          git add preflight.css package.json
          echo "Successfully staged files"
          git commit -m "Updated Preflight to ${{ env.TAILWIND_VERSION }}"
          echo "Successfully committed changes"
          git push
          echo "Successfully pushed changes"

      - name: Publish package
        if: ${{ inputs.dry-run }} == false && ${{ steps.check-update.outputs.update }} == true
        run: |
          npm publish --access=public
          echo "Successfully published package"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}